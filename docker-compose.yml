version: '3.8'

services:
  # Flask API Service
  flask-app:
    image: flask-app
    build:
      context: .
      dockerfile: Dockerfile # Flask Dockerfile in the root directory
    ports:
      - "5001:5000" # Maps Flask container port to 5001
    volumes:
      - ./app:/app # Maps the app directory
    container_name: flask-app
    environment:
      - FLASK_ENV=development
      - MONGO_URI=mongodb://flask-mongo:27017/testdb
    depends_on:
      - flask-mongo # Ensures MongoDB is running before Flask starts
    networks:
      - app-network # Connects to the app network

  # MongoDB Service
  flask-mongo:
    image: mongo:5.0.30
    ports:
      - "27017:27017" # MongoDB default port
    volumes:
      - flask-mongo-data:/data/db # Persistent volume for MongoDB data
    container_name: mongo
    networks:
      - app-network # Connects to the app network

  # Next.js Frontend Service
  nextjs-frontend:
    build:
      context: ./frontend # Points to frontend directory
      dockerfile: Dockerfile # Next.js Dockerfile
    ports:
      - "3000:3000"
    container_name: nextjs-frontend
    volumes:
      - ./frontend:/app # Mount frontend directory for live reloading
      - /app/node_modules # Prevent overwriting node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://flask-app:5000
      - CHOKIDAR_USEPOLLING=true # Required for file watching in Docker
      - WATCHPACK_POLLING=true # Ensures Next.js detects file changes
      - NEXT_DISABLE_TURBOPACK=true # Disable Turbopack (for better stability)
    depends_on:
      - flask-app
    networks:
      - app-network
    command: npm run dev # Runs Next.js in development mode

volumes:
  flask-app-data:
  flask-mongo-data:


networks:
  app-network:
    driver: bridge # Using bridge networking for internal communication
